<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 自动扫描 -->
    <context:component-scan base-package="com.mx.auth"/>
    <!--注入通用配置类 -->
    <bean id="conf" class="com.mx.server.common.config.ConfigLoader"/>

    <!--**********************mx_service_auth  鉴权START***********************************-->
    <bean id="dataSourceAuth" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="#{conf.getProperty('jdbc.driver')}"/>
        <property name="jdbcUrl"
                  value="jdbc:mysql://#{ conf.getProperty('mx.service.auth.mysql.host')}:#{conf.getProperty('mx.service.auth.mysql.port')}/#{conf.getProperty('mx.service.auth.mysql.dbname')}?useUnicode=true&amp;characterEncoding=UTF-8"/>
        <property name="user" value="#{conf.getProperty('mx.service.auth.mysql.username')}"/>
        <property name="password" value="#{conf.getProperty('mx.service.auth.mysql.passwd')}"/>

        <property name="minPoolSize" value="#{conf.getProperty('jdbc.miniPoolSize')}"/>
        <property name="maxPoolSize" value="#{conf.getProperty('jdbc.maxPoolSize')}"/>
        <property name="initialPoolSize" value="#{conf.getProperty('jdbc.initialPoolSize')}"/>
        <property name="maxIdleTime" value="#{conf.getProperty('jdbc.maxIdleTime')}"/>
        <property name="acquireIncrement" value="#{conf.getProperty('jdbc.acquireIncrement')}"/>

        <property name="acquireRetryAttempts" value="#{conf.getProperty('jdbc.acquireRetryAttempts')}"/>
        <property name="acquireRetryDelay" value="#{conf.getProperty('jdbc.acquireRetryDelay')}"/>
        <property name="testConnectionOnCheckin" value="#{conf.getProperty('jdbc.testConnectionOnCheckin')}"/>
        <property name="automaticTestTable" value="#{conf.getProperty('jdbc.automaticTestTable')}"/>
        <property name="idleConnectionTestPeriod" value="#{conf.getProperty('jdbc.idleConnectionTestPeriod')}"/>
        <property name="checkoutTimeout" value="#{conf.getProperty('jdbc.checkoutTimeout')}"/>
    </bean>

    <!--spring和MyBatis完美整合，不需要mybatis的配置映射文件-->
    <bean id="sqlSessionFactoryAuth" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceAuth"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations">
            <list>
                <value>classpath:com/mx/auth/common/mapping/*Mapper.xml</value>
            </list>
        </property>
    </bean>
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mx.auth.**.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryAuth"></property>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManagerAuth"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceAuth"/>
        <qualifier value="auth"></qualifier>
    </bean>
    <!-- 对@Transactional这个注解进行的驱动，这是基于注解的方式使用事务配置声明，这样在具体应用中可以指定对哪些方法使用事务。 -->
    <tx:annotation-driven transaction-manager="transactionManagerAuth"/>
    <!--**********************mx_service_auth  鉴权END***********************************-->


</beans>