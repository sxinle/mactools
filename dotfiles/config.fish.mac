# Path to your oh-my-fish.
set -g OMF_PATH $HOME/.local/share/omf

# Path to your oh-my-fish configuration.
set -g OMF_CONFIG $HOME/.config/omf

### Configuration required to load oh-my-fish ###
# Note: Only add configurations that are required to be set before oh-my-fish is loaded.
# For common configurations, we advise you to add them to your $OMF_CONFIG/init.fish file or
# to create a custom plugin instead.

# Load oh-my-fish configuration.
source $OMF_PATH/init.fish

set fish_plugins brew rvm

[ -f /usr/local/share/autojump/autojump.fish ]; and source /usr/local/share/autojump/autojump.fish

function nvm
   bass source ~/.nvm/nvm.sh --no-use ';' nvm $argv
end
set -x NVM_DIR ~/.nvm
nvm use default --silent

#user alias#{{{

#alias list#{{{

alias ll='ls -lF'
alias l.='ls -A'
alias l='ls -CF'
alias s='ls -F'
alias lsj='ls -F'
alias jls='ls -F'
alias sl='ls -F'
alias lm='ls -Alh --color=auto'

#}}}

alias ..='cd .. ;and ls'
alias tailf='tail -f'
alias curl='curl -i -v -w "@/Users/hsong/folder/util/mactools/curl_format.txt"'
alias whb='~/clear.sh'

## 基金
alias jh='echo "avaliable cmds: [cjj / syncm / jj / jjcc / jjfg / zj / jjchartc / jjzcSync ]"'
alias jj='cd ~/workspace/demo/automns/ && mvn exec:java -Dexec.mainClass="com.terminal.CmdJJ" -q && cd -'
alias jjcc='jjcc'
function jjcc
    cd ~/workspace/demo/automns/;
    mvn exec:java -Dexec.mainClass="com.terminal.CmdJJCC" -Dexec.args="$argv[1]" -q;
    cd -;
end
alias jjzcSync='cd ~/workspace/demo/automns/ && mvn exec:java -Dexec.mainClass="com.terminal.CmdJJZC" -q && cd '
alias jjfg='cd ~/workspace/demo/automns/ && mvn exec:java -Dexec.mainClass="com.terminal.CmdJJFg" -q && cd '
alias syncm='jjchartc && cd ~/workspace/demo/automns/ && mvn exec:java -Dexec.mainClass="com.terminal.CmdSyncM" -q && mvn clean compile && git commit -am "cmt" && git push && cd - && killall chromedriver'
alias cjj='cd ~/workspace/demo/automns/ && mvn clean compile && cd -'
alias zj='cd ~/workspace/demo/automns/ && mvn exec:java -Dexec.mainClass="com.terminal.CmdZj" -q && cd -'
alias jjchartc='cd ~/workspace/demo/automns/ && mvn exec:java -Dexec.mainClass="com.terminal.CmdSync2Js" -q'
alias all='zj && jjcc 1 && jj && clear'
## 基金

alias pos='sudo lsof -nP -iTCP -sTCP:LISTEN'
alias e='~/.ssh/openssh/main.tcl'
alias t='~/.ssh/openssh/tunnel.tcl'

alias useproxy='export http_proxy=http://127.0.0.1:7890 https_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890'
alias noproxy='set --erase http_proxy; and set --erase https_proxy'
alias pegasdebug='adb reverse tcp:8081 tcp:8081; and adb reverse tcp:8080 tcp:8080'
alias wechat='open -n /Users/hsong/Applications/WeChat.app/Contents/MacOS/WeChat';

alias vi='vim -u NONE '
alias nload='nload -m'

alias man='tldr'
alias top='htop'
alias clj='rlwrap clojure $1'

alias ntpdate='sudo ntpdate asia.pool.ntp.org'

alias btree='brew deps --installed --tree'
alias su='sudo su -'
alias rm='remove'
function remove
    mv -bf $argv ~/.Trash/;
end
alias rma='bash -c "/bin/rm -rf ~/.Trash/* && /bin/rm -rf ~/.Trash/.[^.]*"'

alias clXcode='du -sh ~/Library/Developer/CoreSimulator/Devices; and xcrun simctl delete unavailable; and du -sh ~/Library/Developer/CoreSimulator/Devices'
alias corsChrome='open -n -a /Users/hsong/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --args --user-data-dir="/tmp/chrome_dev_test" --disable-web-security'

#MacOSX alias
#alias disDash='defaults write com.apple.dashboard mcx-disabled -boolean true;killall Dock'
#alias openDash='defaults write com.apple.dashboard mcx-disabled -boolean false;killall Dock'
#}}}

#environment #{{{

set -x PATH /usr/local/bin $PATH
set -x PATH /usr/local/opt/coreutils/libexec/gnubin $PATH
set -x PATH /Users/hsong/Applications/MacVim.app/Contents/bin $PATH

set -x ANDROID_SDK_HOME /usr/local/android-sdk
set -x UTIL_HOME ~/folder/util
set -x PATH $PATH $UTIL_HOME/mactools/bin $ANDROID_SDK_HOME/platform-tools $ANDROID_SDK_HOME/tools

set -x MANPATH /usr/local/opt/coreutils/libexec/gnuman /usr/local/share/man $MANPATH
set -x PAGER /usr/local/Cellar/most/5.1.0/bin/most

set -x CLASSPATH $CLASSPATH $UTIL_HOME/lib/* .

set -x TIME_STYLE '+%Y-%m-%d %H:%M:%S'

#eval (docker-machine env default)

#}}}

#eval (jenv init -)
status --is-interactive; and source (jenv init -|psub)
